<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd">
        
    <context:annotation-config/>
    
    <!-- Different ways to load property variables -->
    <context:property-placeholder location="classpath:burritopos.properties" ignore-unresolvable="true"/>
    <!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="location">
            <value>classpath:burritopos.properties</value>
        </property>
    </bean> -->

    <bean id="burritoposServerIP" class="java.lang.String">
        <constructor-arg type="java.lang.String">
            <value>${burritopos.server.ip}</value>
        </constructor-arg>
    </bean>
    
    <bean id="burritoposServerPort" class="java.lang.String">
        <constructor-arg type="java.lang.String">
            <value>${burritopos.server.port}</value>
        </constructor-arg>
    </bean>
    
    <bean id="keystorePath" class="java.lang.String">
        <constructor-arg type="java.lang.String">
            <value>${ssl.keyStore.path}</value>
        </constructor-arg>
    </bean>
    
    <bean id="keystorePassword" class="java.lang.String">
        <constructor-arg type="java.lang.String">
            <value>${ssl.keyStore.password}</value>
        </constructor-arg>
    </bean>
    
	<!-- Presentation Layer -->
	<!-- Going to statically load these for variation -->
	<!-- <bean id="burritoDialog" class="com.burritopos.presentation.BurritoDialog">
		<property name="bManager" ref="burritoManager"/>
	</bean>
	<bean id="inventoryUI" class="com.burritopos.presentation.InventoryUI">
		<property name="iManager" ref="inventoryManager"/>
	</bean>
	<bean id="loginUI" class="com.burritopos.presentation.LoginUI">
		<property name="authSvc" ref="authSvc"/>
	</bean>
	<bean id="mainUI" class="com.burritopos.presentation.MainUI">
		<property name="iManager" ref="inventoryManager"/>
	</bean>
	<bean id="orderUI" class="com.burritopos.presentation.OrderUI">
		<property name="iManager" ref="inventoryManager"/>
		<property name="oManager" ref="orderManager"/>
	</bean>
	<bean id="orderViewUI" class="com.burritopos.presentation.OrderViewUI">
		<property name="oManager" ref="orderManager"/>
	</bean>
	-->

	<!-- Business Layer, Autowired annotation -->
	<!-- Autowired will find the beans automagically so no need to identify the bean as a property -->
    <bean id="burritoManager" class="com.burritopos.business.BurritoManager" scope="singleton"/>
    <bean id="inventoryManager" class="com.burritopos.business.InventoryManager" scope="singleton"/>
    <bean id="orderManager" class="com.burritopos.business.OrderManager" scope="singleton"/>
	
	<!-- Service Layer, get/set methods -->
	<!-- Use secure authentication socket -->
	<!-- <bean id="authSvc" class="com.burritopos.service.net.AuthenticationSvcSocketImpl" scope="singleton">
		<constructor-arg type="java.lang.String">
            <ref bean="burritoposServerIP"/>
        </constructor-arg>
        <constructor-arg type="java.lang.String">
            <ref bean="burritoposServerPort"/>
        </constructor-arg>
	</bean> -->
	<bean id="secureAuthSvc" class="com.burritopos.service.net.SecureAuthenticationSvcSocketImpl" scope="singleton">
		<constructor-arg type="java.lang.String">
            <ref bean="burritoposServerIP"/>
        </constructor-arg>
        <constructor-arg type="java.lang.String">
            <ref bean="burritoposServerPort"/>
        </constructor-arg>
        <constructor-arg type="java.lang.String">
            <ref bean="keystorePath"/>
        </constructor-arg>
        <constructor-arg type="java.lang.String">
            <ref bean="keystorePassword"/>
        </constructor-arg>
	</bean>
	<bean id="burritoSvc" class="com.burritopos.service.dao.mongo.BurritoSvcImpl" scope="singleton"/>
	<bean id="customerSvc" class="com.burritopos.service.dao.mongo.CustomerSvcImpl" scope="singleton"/>
	<bean id="employeeSvc" class="com.burritopos.service.dao.mongo.EmployeeSvcImpl" scope="singleton"/>
	<bean id="inventorySvc" class="com.burritopos.service.dao.mongo.InventorySvcImpl" scope="singleton"/>
	<bean id="managerSvc" class="com.burritopos.service.dao.mongo.ManagerSvcImpl" scope="singleton"/>
	<bean id="orderSvc" class="com.burritopos.service.dao.mongo.OrderSvcImpl" scope="singleton">
		<property name="burritoSvc" ref="burritoSvc"/>
	</bean>
	
	<!-- Domain Layer -->
	
	<!-- junit Tests -->
	
	<!-- Presentation Layer -->
	
	<!-- Business Layer -->
	<bean id="burritoManagerTestCase" class="com.burritopos.business.test.BurritoManagerTestCase"/>
	<bean id="inventoryManagerTestCase" class="com.burritopos.business.test.InventoryManagerTestCase"/>
	<bean id="orderManagerTestCase" class="com.burritopos.business.test.OrderManagerTestCase"/>
	
	<!-- Service Layer -->
	<!-- <bean id="authSvcTestCase" class="com.burritopos.service.test.AuthenticationSvcImplTestCase" scope="singleton"/> -->
	<!-- <bean id="secureAuthSvcTestCase" class="com.burritopos.service.test.SecureAuthenticationSvcImplTestCase" scope="singleton"/> -->
	<bean id="burritoSvcTestCase" class="com.burritopos.service.test.BurritoSvcImplTestCase"/>
	<bean id="customerSvcTestCase" class="com.burritopos.service.test.CustomerSvcImplTestCase"/>
	<bean id="employeeSvcTestCase" class="com.burritopos.service.test.EmployeeSvcImplTestCase"/>
	<bean id="inventorySvcTestCase" class="com.burritopos.service.test.InventorySvcImplTestCase"/>
	<bean id="managerSvcTestCase" class="com.burritopos.service.test.ManagerSvcImplTestCase"/>
	<bean id="orderSvcTestCase" class="com.burritopos.service.test.OrderSvcImplTestCase"/>
	
	<!-- Domain Layer -->
	
</beans>
